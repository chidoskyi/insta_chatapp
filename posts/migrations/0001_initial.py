# Generated by Django 5.2.6 on 2025-10-29 19:28

import django.db.models.deletion
import django.utils.timezone
import posts.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'tags',
                'ordering': ['-usage_count'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('text', 'Text'), ('image', 'Image'), ('video', 'Video'), ('carousel', 'Carousel')], default='text', max_length=20)),
                ('caption', models.TextField(blank=True, max_length=2200)),
                ('visibility', models.CharField(choices=[('public', 'Public'), ('followers', 'Followers Only'), ('private', 'Private')], default='public', max_length=20)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('comments_count', models.PositiveIntegerField(default=0)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_edited', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'posts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(max_length=500)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('reactions_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_edited', models.BooleanField(default=False)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='posts.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='posts.post')),
            ],
            options={
                'db_table': 'comments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PostMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_type', models.CharField(choices=[('text', 'Text'), ('image', 'Image'), ('video', 'Video')], max_length=10)),
                ('file', models.FileField(blank=True, null=True, upload_to=posts.models.post_media_path)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to=posts.models.post_media_path)),
                ('text_content', models.TextField(blank=True, max_length=500)),
                ('background_color', models.CharField(default='#4A90E2', max_length=7)),
                ('text_color', models.CharField(default='#ffffff', max_length=7)),
                ('width', models.PositiveIntegerField(blank=True, null=True)),
                ('height', models.PositiveIntegerField(blank=True, null=True)),
                ('duration', models.FloatField(blank=True, null=True)),
                ('order', models.PositiveSmallIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='posts.post')),
            ],
            options={
                'db_table': 'post_media',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Reaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target_type', models.CharField(choices=[('post', 'Post'), ('comment', 'Comment')], max_length=10)),
                ('target_id', models.PositiveIntegerField()),
                ('reaction_type', models.CharField(choices=[('grinning', 'üòÄ'), ('joy', 'üòÇ'), ('heart_eyes', 'üòç'), ('smiling_hearts', 'ü•∞'), ('blush', 'üòä'), ('cool', 'üòé'), ('star_eyes', 'ü§©'), ('sob', 'üò≠'), ('cry', 'üò¢'), ('rage', 'üò°'), ('thumbs_up', 'üëç'), ('clap', 'üëè'), ('pray', 'üôè'), ('heart', '‚ù§Ô∏è'), ('fire', 'üî•'), ('sparkles', '‚ú®'), ('hundred', 'üíØ'), ('party', 'üéâ'), ('scream', 'üò±'), ('thinking', 'ü§î')], max_length=50)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'reactions',
            },
        ),
        migrations.CreateModel(
            name='SavedPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('folder', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_by', to='posts.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'saved_posts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PostTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_tags', to='posts.post')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_posts', to='posts.tag')),
            ],
            options={
                'db_table': 'post_tags',
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target_type', models.CharField(choices=[('post', 'Post'), ('comment', 'Comment'), ('reply', 'Reply')], max_length=10)),
                ('target_id', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'likes',
                'indexes': [models.Index(fields=['target_type', 'target_id', '-created_at'], name='likes_target__c52377_idx'), models.Index(fields=['user', '-created_at'], name='likes_user_id_674d5a_idx')],
                'unique_together': {('user', 'target_type', 'target_id')},
            },
        ),
        migrations.CreateModel(
            name='Mention',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('position', models.IntegerField(default=0, help_text='Character position in text')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('mentioned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentions_created', to=settings.AUTH_USER_MODEL)),
                ('mentioned_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentions_received', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'mentions',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['mentioned_user', '-created_at'], name='mentions_mention_2a5326_idx'), models.Index(fields=['content_type', 'object_id'], name='mentions_content_f100e1_idx')],
                'unique_together': {('mentioned_user', 'content_type', 'object_id')},
            },
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['user', '-created_at'], name='posts_user_id_dfa368_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['-created_at'], name='posts_created_2e2442_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['visibility', '-created_at'], name='posts_visibil_c2b22e_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['post', '-created_at'], name='comments_post_id_8fd787_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['parent', '-created_at'], name='comments_parent__b79743_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['user', '-created_at'], name='comments_user_id_a80af7_idx'),
        ),
        migrations.AddIndex(
            model_name='postmedia',
            index=models.Index(fields=['post', 'order'], name='post_media_post_id_fc20f0_idx'),
        ),
        migrations.AddIndex(
            model_name='reaction',
            index=models.Index(fields=['target_type', 'target_id', '-created_at'], name='reactions_target__08c725_idx'),
        ),
        migrations.AddIndex(
            model_name='reaction',
            index=models.Index(fields=['user', '-created_at'], name='reactions_user_id_5ab237_idx'),
        ),
        migrations.AddIndex(
            model_name='reaction',
            index=models.Index(fields=['target_type', 'target_id', 'reaction_type'], name='reactions_target__97776d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='reaction',
            unique_together={('user', 'target_type', 'target_id')},
        ),
        migrations.AddIndex(
            model_name='savedpost',
            index=models.Index(fields=['user', '-created_at'], name='saved_posts_user_id_3d45b5_idx'),
        ),
        migrations.AddIndex(
            model_name='savedpost',
            index=models.Index(fields=['user', 'folder', '-created_at'], name='saved_posts_user_id_529e90_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='savedpost',
            unique_together={('user', 'post')},
        ),
        migrations.AddIndex(
            model_name='posttag',
            index=models.Index(fields=['tag', '-created_at'], name='post_tags_tag_id_5004a4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='posttag',
            unique_together={('post', 'tag')},
        ),
    ]
