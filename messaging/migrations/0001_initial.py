# Generated by Django 5.2.6 on 2025-10-29 19:28

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0002_profile_remove_user_avatar_remove_user_bio_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserPresence',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='presence', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('is_online', models.BooleanField(default=False)),
                ('last_seen', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_activity', models.DateTimeField(default=django.utils.timezone.now)),
                ('show_last_seen_to', models.CharField(choices=[('everyone', 'Everyone'), ('contacts', 'My Contacts'), ('nobody', 'Nobody')], default='everyone', max_length=20)),
                ('show_online_status_to', models.CharField(choices=[('everyone', 'Everyone'), ('contacts', 'My Contacts'), ('nobody', 'Nobody')], default='everyone', max_length=20)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'user_presence',
            },
        ),
        migrations.CreateModel(
            name='Call',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('call_type', models.CharField(choices=[('audio', 'Audio Call'), ('video', 'Video Call')], max_length=10)),
                ('status', models.CharField(choices=[('initiated', 'Initiated'), ('ringing', 'Ringing'), ('answered', 'Answered'), ('rejected', 'Rejected'), ('missed', 'Missed'), ('ended', 'Ended'), ('failed', 'Failed')], default='initiated', max_length=20)),
                ('offer_sdp', models.TextField(blank=True)),
                ('answer_sdp', models.TextField(blank=True)),
                ('initiated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('answered_at', models.DateTimeField(blank=True, null=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('caller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='initiated_calls', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'calls',
                'ordering': ['-initiated_at'],
            },
        ),
        migrations.CreateModel(
            name='CallParticipant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('invited', 'Invited'), ('ringing', 'Ringing'), ('joined', 'Joined'), ('left', 'Left'), ('rejected', 'Rejected'), ('missed', 'Missed')], default='invited', max_length=20)),
                ('ice_candidates', models.JSONField(blank=True, default=list)),
                ('invited_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('joined_at', models.DateTimeField(blank=True, null=True)),
                ('left_at', models.DateTimeField(blank=True, null=True)),
                ('call', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='call_participants', to='messaging.call')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='call_participations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'call_participants',
                'ordering': ['invited_at'],
                'unique_together': {('call', 'user')},
            },
        ),
        migrations.AddField(
            model_name='call',
            name='participants',
            field=models.ManyToManyField(related_name='participated_calls', through='messaging.CallParticipant', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('direct', 'Direct Message'), ('group', 'Group Chat')], default='direct', max_length=10)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='group_icons/')),
                ('only_admins_can_send', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_conversations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'conversations',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.AddField(
            model_name='call',
            name='conversation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calls', to='messaging.conversation'),
        ),
        migrations.CreateModel(
            name='ConversationMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_muted', models.BooleanField(default=False)),
                ('is_pinned', models.BooleanField(default=False)),
                ('is_archived', models.BooleanField(default=False)),
                ('last_read_at', models.DateTimeField(blank=True, null=True)),
                ('show_last_seen', models.BooleanField(default=True)),
                ('show_online_status', models.BooleanField(default=True)),
                ('joined_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('left_at', models.DateTimeField(blank=True, null=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='messaging.conversation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversation_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'conversation_members',
                'ordering': ['joined_at'],
            },
        ),
        migrations.CreateModel(
            name='GroupInviteLink',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(db_index=True, max_length=32, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('max_uses', models.IntegerField(blank=True, null=True)),
                ('use_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invite_links', to='messaging.conversation')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_invite_links', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'group_invite_links',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_type', models.CharField(choices=[('text', 'Text'), ('image', 'Image'), ('video', 'Video'), ('audio', 'Audio'), ('document', 'Document'), ('contact', 'Contact'), ('location', 'Location')], default='text', max_length=20)),
                ('body', models.TextField(blank=True, max_length=5000)),
                ('media', models.FileField(blank=True, null=True, upload_to='messages/media/')),
                ('media_thumbnail', models.ImageField(blank=True, null=True, upload_to='messages/thumbnails/')),
                ('media_duration', models.IntegerField(blank=True, null=True)),
                ('media_size', models.BigIntegerField(blank=True, null=True)),
                ('location_latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('location_longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('location_name', models.CharField(blank=True, max_length=255)),
                ('forward_count', models.IntegerField(default=0)),
                ('is_edited', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_for_everyone', models.BooleanField(default=False)),
                ('is_starred', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='messaging.conversation')),
                ('delivered_to', models.ManyToManyField(blank=True, related_name='delivered_messages', to=settings.AUTH_USER_MODEL)),
                ('forwarded_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='forwards', to='messaging.message')),
                ('reply_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='messaging.message')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'messages',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='MessageReaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('emoji', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='messaging.message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_reactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'message_reactions',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='MessageRead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='read_by', to='messaging.message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='read_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'message_reads',
                'ordering': ['read_at'],
            },
        ),
        migrations.CreateModel(
            name='StarredMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('starred_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='starred_by', to='messaging.message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='starred_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'starred_messages',
                'ordering': ['-starred_at'],
            },
        ),
        migrations.CreateModel(
            name='TypingStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='typing_users', to='messaging.conversation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'typing_status',
            },
        ),
        migrations.CreateModel(
            name='BlockedUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('blocked_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('blocked', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messaging_blocked_by', to=settings.AUTH_USER_MODEL)),
                ('blocker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_users', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'messaging_blocked_users',
                'indexes': [models.Index(fields=['blocker', 'blocked'], name='messaging_b_blocker_10ae18_idx')],
                'unique_together': {('blocker', 'blocked')},
            },
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['-updated_at'], name='conversatio_updated_c163ba_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['type', '-updated_at'], name='conversatio_type_c25494_idx'),
        ),
        migrations.AddIndex(
            model_name='call',
            index=models.Index(fields=['-initiated_at'], name='calls_initiat_62bd90_idx'),
        ),
        migrations.AddIndex(
            model_name='call',
            index=models.Index(fields=['conversation', '-initiated_at'], name='calls_convers_9e5219_idx'),
        ),
        migrations.AddIndex(
            model_name='call',
            index=models.Index(fields=['status'], name='calls_status_de57eb_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationmember',
            index=models.Index(fields=['user', '-joined_at'], name='conversatio_user_id_e34f74_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationmember',
            index=models.Index(fields=['conversation', 'user'], name='conversatio_convers_04f4a5_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationmember',
            index=models.Index(fields=['user', 'is_pinned', '-joined_at'], name='conversatio_user_id_e4d613_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='conversationmember',
            unique_together={('conversation', 'user')},
        ),
        migrations.AddIndex(
            model_name='groupinvitelink',
            index=models.Index(fields=['code'], name='group_invit_code_51ef15_idx'),
        ),
        migrations.AddIndex(
            model_name='groupinvitelink',
            index=models.Index(fields=['conversation', 'is_active'], name='group_invit_convers_397ceb_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['conversation', 'created_at'], name='messages_convers_3ebb41_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['sender', '-created_at'], name='messages_sender__7375e3_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['-created_at'], name='messages_created_17cff9_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['conversation', 'is_starred'], name='messages_convers_00e5fe_idx'),
        ),
        migrations.AddIndex(
            model_name='messagereaction',
            index=models.Index(fields=['message', 'created_at'], name='message_rea_message_868f44_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='messagereaction',
            unique_together={('message', 'user')},
        ),
        migrations.AddIndex(
            model_name='messageread',
            index=models.Index(fields=['message', 'read_at'], name='message_rea_message_60698a_idx'),
        ),
        migrations.AddIndex(
            model_name='messageread',
            index=models.Index(fields=['user', 'read_at'], name='message_rea_user_id_8d07ab_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='messageread',
            unique_together={('message', 'user')},
        ),
        migrations.AddIndex(
            model_name='starredmessage',
            index=models.Index(fields=['user', '-starred_at'], name='starred_mes_user_id_8904c6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='starredmessage',
            unique_together={('user', 'message')},
        ),
        migrations.AlterUniqueTogether(
            name='typingstatus',
            unique_together={('conversation', 'user')},
        ),
    ]
